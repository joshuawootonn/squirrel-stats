[tool.ruff]
# Target Python 3.13
target-version = "py313"

# Line length (same as black)
line-length = 120

# Exclude directories
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "migrations",
    "*.pyc",
    ".tox",
    "build",
    "dist",
    "*.egg-info",
    ".cache",
    ".mypy_cache",
]

[tool.ruff.lint]
# Enable rules (equivalent to black + isort + flake8)
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "DJ",  # flake8-django
]

# Ignore specific rules (equivalent to .flake8 extend-ignore)
ignore = [
    "E501",  # line too long (handled by formatter)
    "SIM108", # use ternary operator instead of if-else-block (prefer explicit if-else for readability)
]



# Allow autofix for all enabled rules
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Use double quotes for strings (black style)
quote-style = "double"

# Indent with spaces
indent-style = "space"

# Respect magic trailing commas
skip-magic-trailing-comma = false

# Automatically detect line endings
line-ending = "auto"

[tool.ruff.lint.isort]
# Known first-party modules
known-first-party = ["server", "api"]

# Don't combine as imports to avoid conflicts with formatter
combine-as-imports = false

# Split on trailing comma
split-on-trailing-comma = true

# Force single line imports to avoid formatter conflicts
force-single-line = false

# Allow the formatter to handle line wrapping
force-wrap-aliases = true
