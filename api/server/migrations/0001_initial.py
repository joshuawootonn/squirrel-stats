# Generated by Django 5.2.5 on 2025-08-24 04:06

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Site",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the site",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="The name of the site", max_length=255),
                ),
                (
                    "identifier",
                    models.CharField(
                        db_index=True,
                        help_text="Unique woodland-themed identifier (e.g., mossy-acorn-123456)",
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the session",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "session_id",
                    models.CharField(
                        db_index=True,
                        help_text="Anonymous session identifier (generated from IP + UA + time window)",
                        max_length=64,
                        unique=True,
                    ),
                ),
                (
                    "is_bounce",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this session only had one page view",
                    ),
                ),
                (
                    "duration",
                    models.IntegerField(
                        default=0, help_text="Duration of the session in seconds"
                    ),
                ),
                (
                    "page_view_count",
                    models.IntegerField(
                        default=0, help_text="Number of page views in this session"
                    ),
                ),
                (
                    "referrer",
                    models.URLField(
                        blank=True,
                        help_text="Referrer URL for the session",
                        max_length=2048,
                    ),
                ),
                (
                    "referrer_domain",
                    models.CharField(
                        blank=True, help_text="Domain of the referrer", max_length=255
                    ),
                ),
                (
                    "enter_page",
                    models.CharField(
                        help_text="First page visited in this session", max_length=1024
                    ),
                ),
                (
                    "exit_page",
                    models.CharField(
                        blank=True,
                        help_text="Last page visited in this session",
                        max_length=1024,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "site",
                    models.ForeignKey(
                        help_text="The site this session belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to="server.site",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PageView",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the page view",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        help_text="Full URL of the page viewed", max_length=2048
                    ),
                ),
                (
                    "path",
                    models.CharField(
                        help_text="Path portion of the URL", max_length=1024
                    ),
                ),
                (
                    "referrer",
                    models.URLField(
                        blank=True,
                        help_text="Referrer URL if available",
                        max_length=2048,
                    ),
                ),
                (
                    "referrer_domain",
                    models.CharField(
                        blank=True, help_text="Domain of the referrer", max_length=255
                    ),
                ),
                (
                    "ip_hash",
                    models.CharField(
                        help_text="Hashed IP address for privacy", max_length=64
                    ),
                ),
                ("user_agent", models.TextField(help_text="Full user agent string")),
                (
                    "browser",
                    models.CharField(
                        blank=True, help_text="Browser name", max_length=50
                    ),
                ),
                (
                    "browser_version",
                    models.CharField(
                        blank=True, help_text="Browser version", max_length=20
                    ),
                ),
                (
                    "operating_system",
                    models.CharField(
                        blank=True, help_text="Operating system", max_length=50
                    ),
                ),
                (
                    "device_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("desktop", "Desktop"),
                            ("mobile", "Mobile"),
                            ("tablet", "Tablet"),
                            ("bot", "Bot"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        help_text="Type of device",
                        max_length=20,
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        help_text="ISO 3166-1 alpha-2 country code",
                        max_length=2,
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        blank=True, help_text="Region/state name", max_length=255
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, help_text="City name", max_length=255),
                ),
                (
                    "is_processed",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Whether session assignment has been processed",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "session",
                    models.ForeignKey(
                        blank=True,
                        help_text="The session this page view belongs to (assigned async)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="page_views",
                        to="server.session",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        help_text="The site this page view belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="page_views",
                        to="server.site",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["is_processed", "created_at"],
                        name="server_page_is_proc_54e514_idx",
                    )
                ],
            },
        ),
    ]
